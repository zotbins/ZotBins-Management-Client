import React from 'react'
import {
  Document,
  Page,
  Text,
  View,
  StyleSheet,
  Image,
} from '@react-pdf/renderer'
import zotbinsLogo from '../../../images/full_zotbins_logo_wide.png'
import DisposalCombined from './Charts/disposalCombined'
import DisposalByType from './Charts/disposalByType'
import DisposalPercentage from './Charts/disposalPercentage'
import TotalDisposal from './Charts/totalDisposal'
import DivergenceRate from './Charts/divergenceRate'

const styles = StyleSheet.create({
  page: {
    paddingTop: 20,
    paddingBottom: 10,
  },
  top: {
    marginLeft: 10,
    paddingLeft: 10,
    flexDirection: 'row',
    justifyContent: 'start',
  },
  logo: {
    width: '115px',
    height: '115px',
  },
  title: {
    fontSize: 24,
    fontWeight: 500,
  },
  subtext: {
    color: '#828282',
    fontSize: 12,
    marginTop: 5,
    fontWeight: 400,
  },
  topcol: {
    marginTop: 22,
    flexDirection: 'column',
  },
  row: {
    marginLeft: 39,
    flexDirection: 'row',
    justifyContent: 'start',
  },
  col: {
    marginLeft: 39,
    flexDirection: 'col',
    justifyContent: 'start',
  },
  sectiontitle: {
    fontSize: 15,
    fontWeight: 500,
  },
  sectiontime: {
    color: '#828282',
    fontSize: 15,
    fontWeight: 400,
  },
  optiontitle: {
    color: '#525252',
    fontSize: 12,
    fontWeight: 600,
  },
  optionrow: {
    marginLeft: 39,
    marginTop: 10,
    flexDirection: 'row',
    justifyContent: 'start',
  },
})

class GeneratePDF extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    var start_timestamp = this.props.time[0].substring(0, 10) + ' ' + this.props.time[0].substring(11, 19);
    var end_timestamp = this.props.time[1].substring(0, 10) + ' ' + this.props.time[1].substring(11, 19);
    return (
      <Document>
        <Page size="A4" style={styles.page}>
          <View style={styles.top}>
            <Image src={zotbinsLogo} style={styles.logo}></Image>
            <View style={styles.topcol}>
              <Text style={styles.title}>Data Report</Text>
              <Text style={styles.subtext}>
                UCI Donald Bren Hall {'\n'}
                Generated by: {this.props.name} {'\n'}
                Generated on {this.props.currentDate} {this.props.currentTime}
              </Text>
            </View>
          </View>

          <View style={styles.row}>
            <Text style={styles.sectiontitle}>Historical Data </Text>
            <Text style={styles.sectiontime}>
              ({this.props.time[0].substring(0, 10)} at{' '}
              {this.props.time[0].substring(11, 13) % 12
                ? this.props.time[0].substring(11, 13) % 12
                : 12}
              :{this.props.time[0].substring(14, 16)}
              {this.props.time[0].substring(11, 13) >= 12 ? ' PM' : ' AM'}) to (
              {this.props.time[1].substring(0, 10)} at{' '}
              {this.props.time[1].substring(11, 13) % 12
                ? this.props.time[1].substring(11, 13) % 12
                : 12}
              :{this.props.time[1].substring(14, 16)}
              {this.props.time[1].substring(11, 13) >= 12 ? ' PM' : ' AM'})
            </Text>
          </View>

          {this.props.avgDisposalCombined ? (
            <View wrap={false}>
              <View style={styles.optionrow}>
                <Text style={styles.optiontitle}>
                  Average Disposal Combined
                </Text>
              </View>
              <DisposalCombined start_timestamp={start_timestamp} end_timestamp={end_timestamp}/>
            </View>
          ) : (
            <></>
          )}

          {this.props.avgDisposalType ? (
            <View wrap={false}>
              <View style={styles.optionrow}>
                <Text style={styles.optiontitle}>Average Disposal By Type</Text>
              </View>
              <DisposalByType start_timestamp={start_timestamp} end_timestamp={end_timestamp}/>
            </View>
          ) : (
            <></>
          )}

          {this.props.disposalPercent ? (
            <View wrap={false}>
              <View style={styles.optionrow}>
                <Text style={styles.optiontitle}>Disposal Percentage</Text>
              </View>
              <DisposalPercentage start_timestamp={start_timestamp} end_timestamp={end_timestamp}/>
            </View>
          ) : (
            <></>
          )}

          {this.props.disposalTotal ? (
            <View wrap={false}>
              <View style={styles.optionrow}>
                <Text style={styles.optiontitle}>Total Disposal</Text>
              </View>
              <TotalDisposal start_timestamp={start_timestamp} end_timestamp={end_timestamp}/>
            </View>
          ) : (
            <></>
          )}

          {this.props.divergenceRate ? (
            <View wrap={false}>
              <View style={styles.optionrow}>
                <Text style={styles.optiontitle}>Divergence Rate</Text>
              </View>
              <DivergenceRate start_timestamp={start_timestamp} end_timestamp={end_timestamp}/>
            </View>
          ) : (
            <></>
          )}
        </Page>
      </Document>
    )
  }
}
export default GeneratePDF
